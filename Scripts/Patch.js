const fs = require('fs');
const axios = require('axios');
const toolbox = require('tinytoolbox');
const path = require('path');

const DataDirectory = path.join(__dirname,'Data');

var OriginalFileLocation = null;

if (process.argv[2] == undefined)
{
	console.error('No file given.\n');
	process.exit(1);
}

if (fs.existsSync(process.argv[2]))
{
	OriginalFileLocation = path.resolve(process.argv[2]);
}

if (fs.existsSync(path.join(__dirname,process.argv[2])))
{
	OriginalFileLocation = path.join(__dirname,process.argv[2]);
}

if (fs.existsSync(path.join(DataDirectory,process.argv[2])))
{
	OriginalFileLocation = path.join(DataDirectory,process.argv[2]);
}

if (OriginalFileLocation == null)
{
	console.error(`Unknown File Location '${OriginalFileLocation}'\n`);
	process.exit(1);
}

if (!fs.existsSync(OriginalFileLocation))
{
	console.error(`File does not exist '${OriginalFileLocation}'\n`);
	process.exit(1);
}

var _StartTimestamp = Date.now();

var ConsoleWidth = 0;
var ConsoleSeperatorCharacter = "=";
var ConsoleSeperatorText = '';
for (let i = 0; i <= (36+OriginalFileLocation.length);i++) {
	ConsoleWidth++;
	ConsoleSeperatorText = ConsoleSeperatorText + ConsoleSeperatorCharacter;
}

console.log(`Using Unmodified jackbox.tv Script '${OriginalFileLocation}'`);
console.log(ConsoleSeperatorText);
(async ()=>
{
	var PatchedContents = await fs.readFileSync(OriginalFileLocation);
	PatchedContents = PatchedContents.toString();

	// Add Watermark
	PatchedContents = await require('./../Patches/FileWatermark.js')(PatchedContents);

	// Enable Debug Mode
	PatchedContents = await require('./../Patches/DebugMode.js')(PatchedContents);

	console.log(ConsoleSeperatorText);
	// Write Contents to Patched File
	var PatchedLocation = path.join(DataDirectory,'patched.bundle.js').replace("/Scripts","").replace("\\Scripts","");
	console.log(`Writing Patched Contents to '${PatchedLocation}'`);

	if (fs.existsSync(PatchedLocation))
	{
		await fs.unlinkSync(PatchedLocation);
		console.log(`Removed Duplicate File`);
	}

	await fs.writeFileSync(PatchedLocation,PatchedContents);
	console.log(`Wrote Patched File!`);


	console.log(`Took ${parseFloat((Date.now() - _StartTimestamp)/1000).toFixed(2)}s`);
})();







